<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>LeetCode-15.三数之和</title>
    <link href="/2025/04/12/LeetCode/Solution/LeetCode-15/"/>
    <url>/2025/04/12/LeetCode/Solution/LeetCode-15/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/3sum/description/">15. 三数之和</a></p><h2 id="提示"><a class="markdownIt-Anchor" href="#提示"></a> 提示</h2><p>重点在于 固定住了 <code>nums[i]</code>，然后在<code>[left,right]</code>区域内利用双指针进行判断。</p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><p>1.双指针未优化版本</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    vector&lt;vector&lt;<span class="hljs-type">int</span>&gt;&gt; <span class="hljs-built_in">threeSum</span>(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums) &#123;<br>        <span class="hljs-type">int</span> n = nums.<span class="hljs-built_in">size</span>();<br>        ranges::<span class="hljs-built_in">sort</span>(nums);<br>        <br>        vector&lt;vector&lt;<span class="hljs-type">int</span>&gt;&gt; ans;<br>        set&lt;vector&lt;<span class="hljs-type">int</span>&gt;&gt; st;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n - <span class="hljs-number">2</span>; i ++) &#123;<br>            vector&lt;<span class="hljs-type">int</span>&gt;tmp;<br>            <span class="hljs-type">int</span> left = i + <span class="hljs-number">1</span>, right = n - <span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">while</span> (left &lt; right) &#123;<br>                <span class="hljs-keyword">if</span> (nums[left] + nums[right] + nums[i] &gt; <span class="hljs-number">0</span> &amp;&amp; left &lt; right) &#123;<br>                    right --;<br>                &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (nums[left] + nums[right] + nums[i] &lt;= <span class="hljs-number">0</span> &amp;&amp; left &lt; right) &#123;<br>                    <span class="hljs-keyword">if</span> (nums[left] + nums[right] + nums[i] == <span class="hljs-number">0</span>) &#123;<br>                        tmp.<span class="hljs-built_in">push_back</span>(nums[i]);<br>                        tmp.<span class="hljs-built_in">push_back</span>(nums[left]);<br>                        tmp.<span class="hljs-built_in">push_back</span>(nums[right]);<br>                        <span class="hljs-keyword">if</span> (!st.<span class="hljs-built_in">contains</span>(tmp)) &#123;<br>                            st.<span class="hljs-built_in">insert</span>(tmp);<br>                            ans.<span class="hljs-built_in">push_back</span>(tmp);<br>                        &#125;<br>                        tmp.<span class="hljs-built_in">clear</span>();<br>                    &#125;<br>                    left ++;<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> ans;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><p>2.双指针优化版本</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    vector&lt;vector&lt;<span class="hljs-type">int</span>&gt;&gt; <span class="hljs-built_in">threeSum</span>(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums) &#123;<br>        <span class="hljs-type">int</span> n = nums.<span class="hljs-built_in">size</span>();<br>        ranges::<span class="hljs-built_in">sort</span>(nums);<br>        vector&lt;vector&lt;<span class="hljs-type">int</span>&gt;&gt; ans;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n - <span class="hljs-number">2</span>; i ++) &#123;<br>            <span class="hljs-keyword">if</span> (i &gt; <span class="hljs-number">0</span> &amp;&amp; nums[i] == nums[i - <span class="hljs-number">1</span>]) &#123;<br>                <span class="hljs-comment">// perf:跳过重复的数字</span><br>                <span class="hljs-keyword">continue</span>;<br>            &#125;<br><br>            <span class="hljs-keyword">if</span> (nums[i] + nums[i + <span class="hljs-number">1</span>] + nums[i + <span class="hljs-number">2</span>] &gt; <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-comment">// perf:如果 最小的三个数字 大于 0,则break</span><br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            <span class="hljs-keyword">if</span> (nums[i] + nums[n - <span class="hljs-number">1</span>] + nums[n - <span class="hljs-number">2</span>] &lt; <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-comment">// perf:如果 最大的两个数字 + nums[i] 小于 0,则i++</span><br>                <span class="hljs-keyword">continue</span>;<br>            &#125;<br><br>            <span class="hljs-type">int</span> left = i + <span class="hljs-number">1</span>, right = n - <span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">while</span> (left &lt; right) &#123;<br>                <span class="hljs-type">int</span> sum = nums[left] + nums[right] + nums[i];<br>                <span class="hljs-keyword">if</span> (sum &gt; <span class="hljs-number">0</span> &amp;&amp; left &lt; right) &#123;<br>                    right --;<br>                &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sum &lt; <span class="hljs-number">0</span> &amp;&amp; left &lt; right) &#123;<br>                    left ++;<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    ans.<span class="hljs-built_in">push_back</span>(&#123;nums[i], nums[left], nums[right]&#125;);<br><br>                    <span class="hljs-comment">// perf:跳过重复数字</span><br>                    <span class="hljs-keyword">for</span> (left++; left &lt; right &amp;&amp; nums[left] == nums[left - <span class="hljs-number">1</span>]; left++);<br>                    <span class="hljs-keyword">for</span> (right--; left &lt; right &amp;&amp; nums[right] == nums[right + <span class="hljs-number">1</span>]; right--);<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> ans;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>双指针</category>
      
      <category>单序列双指针</category>
      
    </categories>
    
    
    <tags>
      
      <tag>双指针</tag>
      
      <tag>单序列双指针</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-LCP-28. 采购方案</title>
    <link href="/2025/04/12/LeetCode/Solution/LeetCode-LCP-28/"/>
    <url>/2025/04/12/LeetCode/Solution/LeetCode-LCP-28/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/4xy4Wx/description/">LCP 28. 采购方案</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-type">const</span> <span class="hljs-type">static</span> <span class="hljs-type">int</span> MOD = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">purchasePlans</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">int</span> target)</span> </span>&#123;<br>        ranges::<span class="hljs-built_in">sort</span>(nums);<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>, right = nums.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>;<br>        <span class="hljs-type">int</span> ans = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">while</span> (left &lt; right) &#123;<br>            <span class="hljs-keyword">if</span> (nums[left] + nums[right] &lt;= target) &#123;<br>                ans = (ans + (right - left)) % MOD;<br>                left ++;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                right --;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> ans;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>双指针</category>
      
      <category>单序列双指针</category>
      
    </categories>
    
    
    <tags>
      
      <tag>双指针</tag>
      
      <tag>单序列双指针</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-2824.统计和小于目标的下标对数目</title>
    <link href="/2025/04/12/LeetCode/Solution/LeetCode-2824/"/>
    <url>/2025/04/12/LeetCode/Solution/LeetCode-2824/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/count-pairs-whose-sum-is-less-than-target/description/">2824. 统计和小于目标的下标对数目</a></p><h2 id="提示"><a class="markdownIt-Anchor" href="#提示"></a> 提示</h2><p>这里<code>cnt+=right - left</code> 表示以<code>nums[left]</code>为左端点，其右端点为<code>left + 1, left + 2 ... right - 1, right</code>的点，相加的和都小于<code>target</code>时的数组对一共是多少。<br /><code>left+1 ~ right</code>的长度是 <code>right - (left + 1) + 1 = right - left</code>。</p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">countPairs</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">int</span> target)</span> </span>&#123;<br>        ranges::<span class="hljs-built_in">sort</span>(nums);<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>, right = nums.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>;<br>        <span class="hljs-type">int</span> cnt = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">while</span> (left &lt; right) &#123;<br>            <span class="hljs-keyword">if</span> (nums[left] + nums[right] &lt; target) &#123;<br>                cnt += right - left;<br>                left ++;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                right --;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> cnt;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>双指针</category>
      
      <category>单序列双指针</category>
      
    </categories>
    
    
    <tags>
      
      <tag>双指针</tag>
      
      <tag>单序列双指针</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-633.平方数之和</title>
    <link href="/2025/04/12/LeetCode/Solution/LeetCode-633/"/>
    <url>/2025/04/12/LeetCode/Solution/LeetCode-633/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/sum-of-square-numbers/description/">633. 平方数之和</a></p><h2 id="提示"><a class="markdownIt-Anchor" href="#提示"></a> 提示</h2><p>这里进行判断时，使用的是<code>left * left &lt; c - right * right</code><br />如果使用<code>left * left + right * right &lt; c</code>这样来判断的话，可能会爆<code>int</code></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">judgeSquareSum</span><span class="hljs-params">(<span class="hljs-type">int</span> c)</span> </span>&#123;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>, right = <span class="hljs-built_in">sqrt</span>(c);<br>        <span class="hljs-keyword">while</span>(left &lt;= right) &#123;<br>            <span class="hljs-keyword">if</span> (left * left &lt; c - right * right) &#123;<br>                left ++;<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (left * left &gt; c - right * right) &#123;<br>                right --;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>双指针</category>
      
      <category>单序列双指针</category>
      
    </categories>
    
    
    <tags>
      
      <tag>双指针</tag>
      
      <tag>单序列双指针</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-167.两数之和 II - 输入有序数组</title>
    <link href="/2025/04/12/LeetCode/Solution/LeetCode-167/"/>
    <url>/2025/04/12/LeetCode/Solution/LeetCode-167/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/two-sum-ii-input-array-is-sorted/description/">167. 两数之和 II - 输入有序数组</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">twoSum</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; numbers, <span class="hljs-type">int</span> target)</span> </span>&#123;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>, right = numbers.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>;<br>        vector&lt;<span class="hljs-type">int</span>&gt;ans;<br>        <span class="hljs-keyword">while</span> (left &lt; right) &#123;<br>            <span class="hljs-keyword">if</span> (numbers[left] + numbers[right] &gt; target) &#123;<br>                right --;<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (numbers[left] + numbers[right] &lt; target) &#123;<br>                left ++;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                ans.<span class="hljs-built_in">push_back</span>(left + <span class="hljs-number">1</span>);<br>                ans.<span class="hljs-built_in">push_back</span>(right + <span class="hljs-number">1</span>);<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> ans;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>双指针</category>
      
      <category>单序列双指针</category>
      
    </categories>
    
    
    <tags>
      
      <tag>双指针</tag>
      
      <tag>单序列双指针</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-1471.数组中的 k 个最强值</title>
    <link href="/2025/04/12/LeetCode/Solution/LeetCode-1471/"/>
    <url>/2025/04/12/LeetCode/Solution/LeetCode-1471/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/the-k-strongest-values-in-an-array/">1471. 数组中的 k 个最强值</a></p><h2 id="提示"><a class="markdownIt-Anchor" href="#提示"></a> 提示</h2><p>这里的<code>ranges::sort(arr)</code>是<code>c++ 20</code>的新特性,效果和<code>sort(arr.begin(),arr.end())</code>一样。<br />详情可以参考<a href="https://en.cppreference.com/w/cpp/ranges">Ranges library (since C++20)</a> 获取更多关于ranges的用法</p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">getStrongest</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; arr, <span class="hljs-type">int</span> k)</span> </span>&#123;<br>        ranges::<span class="hljs-built_in">sort</span>(arr);<br>        <span class="hljs-type">int</span> n = arr.<span class="hljs-built_in">size</span>();<br>        <span class="hljs-type">int</span> midVal = arr[(n - <span class="hljs-number">1</span>) / <span class="hljs-number">2</span>];<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>, right = n - <span class="hljs-number">1</span>;<br>        vector&lt;<span class="hljs-type">int</span>&gt;ans;<br>        <span class="hljs-type">int</span> cnt = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">while</span> (cnt &lt; k) &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">abs</span>(arr[right] - midVal) &gt;= <span class="hljs-built_in">abs</span>(arr[left] - midVal)) &#123;<br>                ans.<span class="hljs-built_in">push_back</span>(arr[right]);<br>                cnt ++;<br>                right --;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                ans.<span class="hljs-built_in">push_back</span>(arr[left]);<br>                cnt ++;<br>                left ++;<br>            &#125;<br>        &#125;   <br>        <span class="hljs-keyword">return</span> ans;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>双指针</category>
      
      <category>单序列双指针</category>
      
    </categories>
    
    
    <tags>
      
      <tag>双指针</tag>
      
      <tag>单序列双指针</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-658.找到 K 个最接近的元素</title>
    <link href="/2025/04/12/LeetCode/Solution/LeetCode-658/"/>
    <url>/2025/04/12/LeetCode/Solution/LeetCode-658/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/find-k-closest-elements/description/">658. 找到 K 个最接近的元素</a></p><h2 id="提示"><a class="markdownIt-Anchor" href="#提示"></a> 提示</h2><p>尝试去维护一个<strong>长度不能大于k</strong>的滑动窗口，这个滑动窗口内的数据都是最贴近<code>x</code>值的。</p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">findClosestElements</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; arr, <span class="hljs-type">int</span> k, <span class="hljs-type">int</span> x)</span> </span>&#123;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>, right = arr.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>;<br>        <br>        <span class="hljs-keyword">while</span> (right - left + <span class="hljs-number">1</span> &gt; k) &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">abs</span>(arr[left] - x) &gt; <span class="hljs-built_in">abs</span>(arr[right] - x)) &#123;<br>                left ++;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                right --;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">vector</span>&lt;<span class="hljs-type">int</span>&gt;(arr.<span class="hljs-built_in">begin</span>() + left, arr.<span class="hljs-built_in">begin</span>() + right + <span class="hljs-number">1</span>);<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>双指针</category>
      
      <category>单序列双指针</category>
      
    </categories>
    
    
    <tags>
      
      <tag>双指针</tag>
      
      <tag>单序列双指针</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-977.有序数组的平方</title>
    <link href="/2025/04/10/LeetCode/Solution/LeetCode-977/"/>
    <url>/2025/04/10/LeetCode/Solution/LeetCode-977/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/squares-of-a-sorted-array/description/">977. 有序数组的平方</a></p><h2 id="提示"><a class="markdownIt-Anchor" href="#提示"></a> 提示</h2><p>题目中给出的nums数组是 <strong>非递减顺序数组</strong><br />即从 最左/右端 开始的数据，其绝对值是比其 相邻右/左边 的绝对值是要大的</p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">sortedSquares</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums)</span> </span>&#123;<br>        <span class="hljs-type">int</span> n = nums.<span class="hljs-built_in">size</span>();<br>        vector&lt;<span class="hljs-type">int</span>&gt;<span class="hljs-built_in">ans</span>(n);<br>        <span class="hljs-type">int</span> k = n - <span class="hljs-number">1</span>;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>, right = nums.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">while</span> (left &lt;= right) &#123;<br>            <span class="hljs-type">int</span> tmpRight = <span class="hljs-built_in">abs</span>(nums[right]), tmpLeft = <span class="hljs-built_in">abs</span>(nums[left]);<br>            <span class="hljs-keyword">if</span> (tmpRight &lt; tmpLeft) &#123;<br>                ans[k] = tmpLeft * tmpLeft;<br>                k --;<br>                left ++;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                ans[k] = tmpRight * tmpRight;<br>                k --;<br>                right --;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> ans;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>双指针</category>
      
      <category>单序列双指针</category>
      
    </categories>
    
    
    <tags>
      
      <tag>双指针</tag>
      
      <tag>单序列双指针</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-2105.给植物浇水 II</title>
    <link href="/2025/04/10/LeetCode/Solution/LeetCode-2105/"/>
    <url>/2025/04/10/LeetCode/Solution/LeetCode-2105/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/watering-plants-ii/description/">2105. 给植物浇水 II</a></p><h2 id="提示"><a class="markdownIt-Anchor" href="#提示"></a> 提示</h2><p>题目中有一个数据条件很重要</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>p</mi><mi>l</mi><mi>a</mi><mi>n</mi><mi>t</mi><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo>&lt;</mo><mo>=</mo><mi>c</mi><mi>a</mi><mi>p</mi><mi>a</mi><mi>c</mi><mi>i</mi><mi>t</mi><mi>y</mi><mi>A</mi><mo separator="true">,</mo><mi>c</mi><mi>a</mi><mi>p</mi><mi>a</mi><mi>c</mi><mi>i</mi><mi>t</mi><mi>y</mi><mi>B</mi><mo>&lt;</mo><mo>=</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">max(plants[i]) &lt;= capacityA, capacityB &lt;= 10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span></span></p><p>这意味着<code>capacityA/B</code> 永远大于等于<code>plants[i]</code>，即最多加一趟次数</p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">minimumRefill</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; plants, <span class="hljs-type">int</span> capacityA, <span class="hljs-type">int</span> capacityB)</span> </span>&#123;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>, right = plants.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>;<br>        <span class="hljs-type">int</span> a = capacityA, b = capacityB;<br>        <span class="hljs-type">int</span> cnt = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">while</span> (left &lt; right) &#123;<br>            <span class="hljs-keyword">if</span> (a &lt; plants[left]) &#123;<br>                cnt ++;<br>                a = capacityA;<br>            &#125;<br>            a -= plants[left];<br>            left ++;<br><br>            <span class="hljs-keyword">if</span> (b &lt; plants[right]) &#123;<br>                cnt ++;<br>                b = capacityB;<br>            &#125;<br>            b -= plants[right];<br>            right --;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (left == right &amp;&amp; <span class="hljs-built_in">max</span>(a, b) &lt; plants[left]) &#123;<br>            cnt ++;<br>        &#125;<br>        <span class="hljs-keyword">return</span> cnt;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>双指针</category>
      
      <category>单序列双指针</category>
      
    </categories>
    
    
    <tags>
      
      <tag>双指针</tag>
      
      <tag>单序列双指针</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-1750.删除字符串两端相同字符后的最短长度</title>
    <link href="/2025/04/10/LeetCode/Solution/LeetCode-1750/"/>
    <url>/2025/04/10/LeetCode/Solution/LeetCode-1750/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/minimum-length-of-string-after-deleting-similar-ends/description/">1750. 删除字符串两端相同字符后的最短长度</a></p><h2 id="提示"><a class="markdownIt-Anchor" href="#提示"></a> 提示</h2><p>主要是理解这两句话<br /><strong>选择字符串 s 一个 非空 的前缀，这个前缀的所有字符都相同。</strong><br /><strong>选择字符串 s 一个 非空 的后缀，这个后缀的所有字符都相同。</strong><br />即要选择要删除的字符，这个字符在<code>left</code>端，<code>right</code>端都要删除</p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">minimumLength</span><span class="hljs-params">(string s)</span> </span>&#123;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>, right = s.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">while</span> (left &lt; right &amp;&amp; s[left] == s[right]) &#123;<br>            <span class="hljs-type">char</span> ch = s[left];<br>            <span class="hljs-keyword">while</span> (left &lt;= right &amp;&amp; s[left] == ch) &#123;<br>                left ++;<br>            &#125;<br>            <span class="hljs-keyword">while</span> (left &lt;= right &amp;&amp; s[right] == ch) &#123;<br>                right --;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> right - left + <span class="hljs-number">1</span>;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>双指针</category>
      
      <category>单序列双指针</category>
      
    </categories>
    
    
    <tags>
      
      <tag>双指针</tag>
      
      <tag>单序列双指针</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-125.验证回文串</title>
    <link href="/2025/04/10/LeetCode/Solution/LeetCode-125/"/>
    <url>/2025/04/10/LeetCode/Solution/LeetCode-125/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/valid-palindrome/description/">125. 验证回文串</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">isPalindrome</span><span class="hljs-params">(string s)</span> </span>&#123;<br>        string prettierStr = <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">char</span> ch : s) &#123;<br>            <span class="hljs-keyword">if</span> (ch &lt;= <span class="hljs-string">&#x27;z&#x27;</span> &amp;&amp; ch &gt;= <span class="hljs-string">&#x27;a&#x27;</span> || ch &lt;= <span class="hljs-string">&#x27;Z&#x27;</span> &amp;&amp; ch &gt;= <span class="hljs-string">&#x27;A&#x27;</span> || ch &gt;= <span class="hljs-string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="hljs-string">&#x27;9&#x27;</span>) &#123;<br>                prettierStr += <span class="hljs-built_in">tolower</span>(ch);<br>            &#125;<br>        &#125;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>, right = prettierStr.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">while</span> (left &lt; right) &#123;<br>            <span class="hljs-keyword">if</span> (prettierStr[left] != prettierStr[right]) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            &#125; <br>            left ++, right --;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>双指针</category>
      
      <category>单序列双指针</category>
      
    </categories>
    
    
    <tags>
      
      <tag>双指针</tag>
      
      <tag>单序列双指针</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-344.反转字符串</title>
    <link href="/2025/04/10/LeetCode/Solution/LeetCode-344/"/>
    <url>/2025/04/10/LeetCode/Solution/LeetCode-344/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/reverse-string/">344. 反转字符串</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">reverseString</span><span class="hljs-params">(vector&lt;<span class="hljs-type">char</span>&gt;&amp; s)</span> </span>&#123;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>, right = s.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">while</span> (left &lt; right) &#123;<br>            <span class="hljs-built_in">swap</span>(s[left], s[right]);<br>            left ++;<br>            right --;<br>        &#125;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>双指针</category>
      
      <category>单序列双指针</category>
      
    </categories>
    
    
    <tags>
      
      <tag>双指针</tag>
      
      <tag>单序列双指针</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-992.K 个不同整数的子数组</title>
    <link href="/2025/04/10/LeetCode/Solution/LeetCode-992/"/>
    <url>/2025/04/10/LeetCode/Solution/LeetCode-992/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/subarrays-with-k-different-integers/description/">992. K 个不同整数的子数组</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">private</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">subSlidingWindow</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">int</span> k)</span> </span>&#123;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>, ans = <span class="hljs-number">0</span>;<br>        unordered_map&lt;<span class="hljs-type">int</span>, <span class="hljs-type">int</span>&gt; map;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; nums.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            map[nums[right]] ++;<br>            <span class="hljs-keyword">while</span> (map.<span class="hljs-built_in">size</span>() &gt;= k &amp;&amp; left &lt;= right) &#123;<br>                map[nums[left]] --;<br>                <span class="hljs-keyword">if</span> (map[nums[left]] == <span class="hljs-number">0</span>) &#123;<br>                    map.<span class="hljs-built_in">erase</span>(nums[left]);<br>                &#125;<br>                left ++;<br>            &#125;<br>            ans += left;   <br>        &#125;<br>        <span class="hljs-keyword">return</span> ans;<br>    &#125;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">subarraysWithKDistinct</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">int</span> k)</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">subSlidingWindow</span>(nums, k) - <span class="hljs-built_in">subSlidingWindow</span>(nums, k + <span class="hljs-number">1</span>);<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>不定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>不定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-3306.元音辅音字符串计数 II</title>
    <link href="/2025/04/10/LeetCode/Solution/LeetCode-3306/"/>
    <url>/2025/04/10/LeetCode/Solution/LeetCode-3306/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/count-of-substrings-containing-every-vowel-and-k-consonants-ii/description/">3306. 元音辅音字符串计数 II</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">private</span>:<br>    <span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">judgeIsVowel</span><span class="hljs-params">(<span class="hljs-type">char</span> ch)</span> </span>&#123;<br>        <span class="hljs-comment">// 判断是否为元音字母</span><br>        <span class="hljs-keyword">if</span> (ch == <span class="hljs-string">&#x27;a&#x27;</span> || ch == <span class="hljs-string">&#x27;e&#x27;</span> || ch == <span class="hljs-string">&#x27;i&#x27;</span> || ch == <span class="hljs-string">&#x27;o&#x27;</span> || ch == <span class="hljs-string">&#x27;u&#x27;</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-type">long</span> <span class="hljs-type">long</span> <span class="hljs-title">subSlidingWindow</span><span class="hljs-params">(string word, <span class="hljs-type">int</span> k)</span> </span>&#123;<br>        <span class="hljs-type">long</span> <span class="hljs-type">long</span> ans = <span class="hljs-number">0</span>;<br>        <span class="hljs-comment">// cnt记录辅音字母</span><br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>, cnt = <span class="hljs-number">0</span>;<br>        <span class="hljs-comment">// 记录元音字母</span><br>        unordered_map&lt;<span class="hljs-type">int</span>, <span class="hljs-type">int</span>&gt; map;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; word.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">judgeIsVowel</span>(word[right])) &#123;<br>                map[word[right] - <span class="hljs-string">&#x27;a&#x27;</span>] ++;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                cnt ++;<br>            &#125;<br>            <span class="hljs-keyword">while</span> (map.<span class="hljs-built_in">size</span>() == <span class="hljs-number">5</span> &amp;&amp; cnt &gt;= k &amp;&amp; left &lt;=right) &#123;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-built_in">judgeIsVowel</span>(word[left])) &#123;<br>                    map[word[left] - <span class="hljs-string">&#x27;a&#x27;</span>] --;<br>                    <span class="hljs-keyword">if</span> (map[word[left] - <span class="hljs-string">&#x27;a&#x27;</span>] == <span class="hljs-number">0</span>) &#123;<br>                       map.<span class="hljs-built_in">erase</span>(word[left] - <span class="hljs-string">&#x27;a&#x27;</span>);<br>                    &#125;<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    cnt --;<br>                &#125;<br>                left ++;<br>            &#125;<br>            ans += left;<br>        &#125;<br>        <span class="hljs-keyword">return</span> ans;<br>    &#125;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">long</span> <span class="hljs-type">long</span> <span class="hljs-title">countOfSubstrings</span><span class="hljs-params">(string word, <span class="hljs-type">int</span> k)</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">subSlidingWindow</span>(word, k) - <span class="hljs-built_in">subSlidingWindow</span>(word, k + <span class="hljs-number">1</span>);<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>不定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>不定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-1248.统计「优美子数组」</title>
    <link href="/2025/04/10/LeetCode/Solution/LeetCode-1248/"/>
    <url>/2025/04/10/LeetCode/Solution/LeetCode-1248/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/count-number-of-nice-subarrays/description/">1248. 统计「优美子数组」</a></p><h2 id="提示"><a class="markdownIt-Anchor" href="#提示"></a> 提示</h2><p>对于某个数<code>x</code>,使用<code>x &amp; 1</code>能快速判断出其奇偶性<br /><code>x</code>在二进制表示下，其第一位的数字永远都是<code>0 or 1</code>。<br />其二进制从右往左数时，第一位数字为<code>1</code>是则为奇数，为<code>0</code>是偶数。<br />所以<code>x &amp; 1 = 1</code>时，则x为奇数。<code>x&amp;1 = 0</code>是则为偶数。</p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">private</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">subSlidingWindow</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">int</span> k)</span> </span>&#123;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>, cnt = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> ans = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; nums.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            cnt += (nums[right]&amp;<span class="hljs-number">1</span>);<br>            <span class="hljs-keyword">while</span> (cnt &gt;= k) &#123;<br>                cnt -= (nums[left]&amp;<span class="hljs-number">1</span>);<br>                left ++;<br>            &#125;   <br>            ans += left;<br>        &#125;<br>        <span class="hljs-keyword">return</span> ans;<br>    &#125;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">numberOfSubarrays</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">int</span> k)</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">subSlidingWindow</span>(nums, k) - <span class="hljs-built_in">subSlidingWindow</span>(nums, k + <span class="hljs-number">1</span>);<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>不定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>不定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-930.和相同的二元子数组</title>
    <link href="/2025/04/10/LeetCode/Solution/LeetCode-930/"/>
    <url>/2025/04/10/LeetCode/Solution/LeetCode-930/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/binary-subarrays-with-sum/description/">930. 和相同的二元子数组</a></p><h2 id="提示"><a class="markdownIt-Anchor" href="#提示"></a> 提示</h2><p>求一个子数组的和恰好等于<code>goal</code><br />可以先计算出 子数组的和<code>sum&gt;=goal</code>的情况，得到的结果记为<code>ans1</code><br />然后再算一个子数字的和<code>sum &gt;= goal + 1</code>，结果记为<code>ans2</code><br />计算<code>sum &gt;= goal</code>这个可以参考<a href="/2025/04/09/LeetCode/Solution/LeetCode-2962/" title="LeetCode-2962.统计最大元素出现至少 K 次的子数组">LeetCode-2962.统计最大元素出现至少 K 次的子数组</a><br />这里的条件可以换为 <strong>求子数组的和至少为goal时，返回满足条件的子数组个数</strong><br />然后计算等于<code>goal</code>的话，可以用<code>ans1-ans2</code>即可。</p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">private</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">subSlidingWindow</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">int</span> goal)</span> </span>&#123;<br>        <span class="hljs-type">int</span> ans = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>, sum = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; nums.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            sum += nums[right];<br>            <span class="hljs-keyword">while</span> (sum &gt;= goal &amp;&amp; left &lt;= right) &#123;<br>                sum -= nums[left];<br>                left ++;<br>            &#125;<br>            ans += left;<br>        &#125;<br>        <span class="hljs-keyword">return</span> ans;<br>    &#125;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">numSubarraysWithSum</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">int</span> goal)</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">subSlidingWindow</span>(nums, goal) - <span class="hljs-built_in">subSlidingWindow</span>(nums, goal + <span class="hljs-number">1</span>);<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>不定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>不定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-LCP-68.美观的花束</title>
    <link href="/2025/04/09/LeetCode/Solution/LeetCode-LCP-68/"/>
    <url>/2025/04/09/LeetCode/Solution/LeetCode-LCP-68/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/1GxJYY/description/">LCP 68. 美观的花束</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-type">const</span> <span class="hljs-type">static</span> <span class="hljs-type">int</span> MOD = <span class="hljs-number">1000000007</span>;<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">beautifulBouquet</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; flowers, <span class="hljs-type">int</span> cnt)</span> </span>&#123;<br>        unordered_map&lt;<span class="hljs-type">int</span>, <span class="hljs-type">int</span>&gt;map;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>, ans = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; flowers.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            map[flowers[right]] ++;<br>            <span class="hljs-keyword">while</span> (map[flowers[right]] &gt; cnt) &#123;<br>                map[flowers[left]] --;<br>                <span class="hljs-keyword">if</span> (map[flowers[left]] == <span class="hljs-number">0</span>) &#123;<br>                    map.<span class="hljs-built_in">erase</span>(flowers[left]);<br>                &#125;<br>                left ++;<br>            &#125;<br>            ans = (ans + right - left + <span class="hljs-number">1</span>) % MOD ;<br>        &#125;<br>        <span class="hljs-keyword">return</span> ans % MOD;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>不定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>不定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-2302.统计得分小于 K 的子数组数目</title>
    <link href="/2025/04/09/LeetCode/Solution/LeetCode-2302/"/>
    <url>/2025/04/09/LeetCode/Solution/LeetCode-2302/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/count-subarrays-with-score-less-than-k/submissions/620541357/">2302. 统计得分小于 K 的子数组数目</a></p><h2 id="提示"><a class="markdownIt-Anchor" href="#提示"></a> 提示</h2><p>这里<code>for</code>循环遍历时，永远是按照以<code>right</code>为右端点时，可得到的子数组数量大小<br /><code>while(sum*len &gt;= k)</code>代码块结束后<br /><code>ans += (right - left + 1)</code>是代表<code>[left, right]</code>这个区间内<br />以<code>right</code>为右端点，<code>left</code>为左端点的数组里求 满足条件的子数组<br />由于此时<code>[left, right]*(right - left + 1) &lt; k</code>,即<code>[left, right]</code>的区间满足<br />那么<code>[left + 1, right], [left + 2, right] ... [right, right]</code>也一定满足<br />这个长度就是<code>right - left + 1</code></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">long</span> <span class="hljs-type">long</span> <span class="hljs-title">countSubarrays</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">long</span> <span class="hljs-type">long</span> k)</span> </span>&#123;<br>        <span class="hljs-type">long</span> <span class="hljs-type">long</span> ans = <span class="hljs-number">0</span>, sum = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> len = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; nums.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            sum += nums[right];<br>            len = right - left + <span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">while</span> (sum * len &gt;= k) &#123;<br>                sum -= nums[left];<br>                left ++;<br>                len --;<br>            &#125;<br>            ans += (right - left + <span class="hljs-number">1</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> ans;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>不定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>不定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-3258.统计满足 K 约束的子字符串数量 I</title>
    <link href="/2025/04/09/LeetCode/Solution/LeetCode-3258/"/>
    <url>/2025/04/09/LeetCode/Solution/LeetCode-3258/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/count-substrings-that-satisfy-k-constraint-i/description/">3258. 统计满足 K 约束的子字符串数量 I</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">countKConstraintSubstrings</span><span class="hljs-params">(string s, <span class="hljs-type">int</span> k)</span> </span>&#123;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>, ans = <span class="hljs-number">0</span>;<br>        vector&lt;<span class="hljs-type">int</span>&gt;<span class="hljs-built_in">vt</span>(<span class="hljs-number">2</span>);<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; s.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            vt[s[right] - <span class="hljs-string">&#x27;0&#x27;</span>] ++;<br>            <span class="hljs-keyword">while</span> (vt[<span class="hljs-number">0</span>] &gt; k &amp;&amp; vt[<span class="hljs-number">1</span>] &gt; k) &#123;<br>                vt[s[left] - <span class="hljs-string">&#x27;0&#x27;</span>] --;<br>                left ++;<br>            &#125;<br>            ans += (right - left + <span class="hljs-number">1</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> ans;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>不定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>不定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-713.乘积小于 K 的子数组</title>
    <link href="/2025/04/09/LeetCode/Solution/LeetCode-713/"/>
    <url>/2025/04/09/LeetCode/Solution/LeetCode-713/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/subarray-product-less-than-k/description/">713. 乘积小于 K 的子数组</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">numSubarrayProductLessThanK</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">int</span> k)</span> </span>&#123;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">long</span> <span class="hljs-type">long</span> sum = <span class="hljs-number">1</span>;<br>        <span class="hljs-type">int</span> ans = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; nums.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            sum *= nums[right];<br>            <span class="hljs-keyword">while</span> (sum &gt;= k &amp;&amp; left &lt;= right) &#123;<br>                sum /= nums[left];<br>                left ++;<br>            &#125;<br>            ans += (right - left + <span class="hljs-number">1</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> ans;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>不定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>不定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-2799.统计完全子数组的数目</title>
    <link href="/2025/04/09/LeetCode/Solution/LeetCode-2799/"/>
    <url>/2025/04/09/LeetCode/Solution/LeetCode-2799/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/count-complete-subarrays-in-an-array/description/">2799. 统计完全子数组的数目</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">countCompleteSubarrays</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums)</span> </span>&#123;<br>        set&lt;<span class="hljs-type">int</span>&gt;st;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i : nums) &#123;<br>            st.<span class="hljs-built_in">insert</span>(i);<br>        &#125;<br>        <span class="hljs-type">int</span> k = st.<span class="hljs-built_in">size</span>();<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>, ans = <span class="hljs-number">0</span>;<br>        unordered_map&lt;<span class="hljs-type">int</span>, <span class="hljs-type">int</span>&gt; map;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; nums.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            map[nums[right]] ++;<br>            <span class="hljs-keyword">while</span> (map.<span class="hljs-built_in">size</span>() == k) &#123;<br>                map[nums[left]] --;<br>                <span class="hljs-keyword">if</span> (map[nums[left]] == <span class="hljs-number">0</span>) &#123;<br>                    map.<span class="hljs-built_in">erase</span>(nums[left]);<br>                &#125;<br>                left ++;<br>            &#125;<br>            ans += left;<br>        &#125;<br>        <span class="hljs-keyword">return</span> ans;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>不定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>不定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-3325.字符至少出现 K 次的子字符串 I</title>
    <link href="/2025/04/09/LeetCode/Solution/LeetCode-3325/"/>
    <url>/2025/04/09/LeetCode/Solution/LeetCode-3325/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/count-substrings-with-k-frequency-characters-i/description/">3325. 字符至少出现 K 次的子字符串 I</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">numberOfSubstrings</span><span class="hljs-params">(string s, <span class="hljs-type">int</span> k)</span> </span>&#123;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>;<br>        unordered_map&lt;<span class="hljs-type">int</span>, <span class="hljs-type">int</span>&gt;map;<br>        <span class="hljs-type">int</span> ans = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; s.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            map[s[right] - <span class="hljs-string">&#x27;a&#x27;</span>] ++;<br>            <span class="hljs-keyword">while</span> (map[s[right] - <span class="hljs-string">&#x27;a&#x27;</span>] &gt;= k) &#123;<br>                map[s[left] - <span class="hljs-string">&#x27;a&#x27;</span>] --;<br>                left ++;<br>            &#125;<br>            ans += left;<br>        &#125;<br>        <span class="hljs-keyword">return</span> ans;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>不定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>不定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-2962.统计最大元素出现至少 K 次的子数组</title>
    <link href="/2025/04/09/LeetCode/Solution/LeetCode-2962/"/>
    <url>/2025/04/09/LeetCode/Solution/LeetCode-2962/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/count-subarrays-where-max-element-appears-at-least-k-times/description/">2962. 统计最大元素出现至少 K 次的子数组</a></p><h2 id="提示"><a class="markdownIt-Anchor" href="#提示"></a> 提示</h2><p><code>cnt</code>记录<code>[left,right]</code>中出现<code>maxv</code>的次数<br />当<code>cnt == k</code>时候,让<code>left</code>向右走<br />直到<code>[left + x, right]</code>中的<code>cnt &lt; k</code>。<br />而此时将左端点作为 <code>0...left + x - 1</code>都会使得<code>[左端点, right]</code>这个区间的<code>cnt == k</code><br /><code>left + x - 1</code> 距离<code>0点</code>的长度是 <code>left + x - 1 + 1 = left + x</code><br />即可以使用<code>ans += left</code> 来计算合理方案</p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">long</span> <span class="hljs-type">long</span> <span class="hljs-title">countSubarrays</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">int</span> k)</span> </span>&#123;<br>        <span class="hljs-type">int</span> maxv = INT32_MIN;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i : nums) &#123;<br>            maxv = <span class="hljs-built_in">max</span>(maxv, i);<br>        &#125;<br>        <span class="hljs-type">long</span> <span class="hljs-type">long</span> ans = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>, cnt = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; nums.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            cnt += nums[right] == maxv;<br>            <span class="hljs-keyword">while</span> (cnt &gt;= k) &#123;<br>                cnt -= nums[left] == maxv;<br>                left ++;<br>            &#125;<br>            ans += left;<br>        &#125;<br>        <span class="hljs-keyword">return</span> ans;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>不定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>不定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-1358.包含所有三种字符的子字符串数目</title>
    <link href="/2025/04/09/LeetCode/Solution/LeetCode-1358/"/>
    <url>/2025/04/09/LeetCode/Solution/LeetCode-1358/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/number-of-substrings-containing-all-three-characters/description/">1358. 包含所有三种字符的子字符串数目</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">numberOfSubstrings</span><span class="hljs-params">(string s)</span> </span>&#123;<br>        unordered_map&lt;<span class="hljs-type">int</span>, <span class="hljs-type">int</span>&gt;map;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> ans = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; s.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            map[s[right] - <span class="hljs-string">&#x27;a&#x27;</span>] ++;<br>            <span class="hljs-keyword">while</span> (map[<span class="hljs-number">0</span>] &gt; <span class="hljs-number">0</span> &amp;&amp; map[<span class="hljs-number">1</span>] &gt; <span class="hljs-number">0</span> &amp;&amp; map[<span class="hljs-number">2</span>] &gt; <span class="hljs-number">0</span>) &#123;<br>                map[s[left] - <span class="hljs-string">&#x27;a&#x27;</span>] --;<br>                left ++;<br>            &#125;<br>            <span class="hljs-comment">// 例如abcabc 当走到第一个c时 =&gt; abc</span><br>            <span class="hljs-comment">// abc =&gt; bc 此时left = 1, ans += left</span><br>            <span class="hljs-comment">// 移动left，[left, right]组成的滑动窗口恰好使得条件不成立</span><br>            <span class="hljs-comment">// 而以right为右端点，滑动窗口外的值(即当 left &lt; 滑动窗口left 时所有数据都是符合条件的)</span><br>            ans += left;<br>        &#125;<br>        <span class="hljs-keyword">return</span> ans;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>不定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>不定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-2904.最短且字典序最小的美丽子字符串</title>
    <link href="/2025/04/09/LeetCode/Solution/LeetCode-2904/"/>
    <url>/2025/04/09/LeetCode/Solution/LeetCode-2904/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/shortest-and-lexicographically-smallest-beautiful-string/description/">2904. 最短且字典序最小的美丽子字符串</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-comment">// 去除前导0</span><br>    <span class="hljs-function">string <span class="hljs-title">deletePrefixZero</span> <span class="hljs-params">(string str)</span> </span>&#123;<br>        <span class="hljs-type">int</span> i = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">while</span> (i &lt; str.<span class="hljs-built_in">size</span>() &amp;&amp; str[i] == <span class="hljs-string">&#x27;0&#x27;</span>) &#123;<br>            i++;<br>        &#125;<br>        <span class="hljs-keyword">return</span> str.<span class="hljs-built_in">substr</span>(i);<br>    &#125;<br><br>    <span class="hljs-function">string <span class="hljs-title">shortestBeautifulSubstring</span><span class="hljs-params">(string s, <span class="hljs-type">int</span> k)</span> </span>&#123;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>, cnt = <span class="hljs-number">0</span>;<br>        string ans = <span class="hljs-string">&quot;&quot;</span>, tmp = <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; s.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            cnt += s[right] == <span class="hljs-string">&#x27;1&#x27;</span>;<br>            <span class="hljs-keyword">while</span> (cnt &gt; k || s[left] == <span class="hljs-string">&#x27;0&#x27;</span>) &#123;<br>                cnt -= s[left] == <span class="hljs-string">&#x27;1&#x27;</span>;<br>                left ++;<br>            &#125;<br><br>            <span class="hljs-keyword">if</span> (cnt == k) &#123;<br>                tmp = s.<span class="hljs-built_in">substr</span>(left, right - left + <span class="hljs-number">1</span>);<br>                tmp = <span class="hljs-built_in">deletePrefixZero</span>(tmp);<br>                <span class="hljs-comment">// int k = a.compare(b)</span><br>                <span class="hljs-comment">// 如果 k==1,则a&gt;b; k==0,则a=b; k==-1,则a&lt;b</span><br>                <span class="hljs-keyword">if</span> (ans.<span class="hljs-built_in">size</span>() == <span class="hljs-number">0</span> || ans.<span class="hljs-built_in">size</span>() &gt; tmp.<span class="hljs-built_in">size</span>() || (ans.<span class="hljs-built_in">size</span>() == tmp.<span class="hljs-built_in">size</span>() &amp;&amp; ans.<span class="hljs-built_in">compare</span>(tmp) &gt; <span class="hljs-number">0</span>)) &#123;<br>                    ans = tmp;<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> ans;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>不定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>不定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-209.长度最小的子数组</title>
    <link href="/2025/04/09/LeetCode/Solution/LeetCode-209/"/>
    <url>/2025/04/09/LeetCode/Solution/LeetCode-209/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/minimum-size-subarray-sum/description/">209. 长度最小的子数组</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">minSubArrayLen</span><span class="hljs-params">(<span class="hljs-type">int</span> target, vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums)</span> </span>&#123;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> sum = <span class="hljs-number">0</span>, minv = INT32_MAX;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; nums.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            sum += nums[right];<br>            <span class="hljs-keyword">while</span> (sum &gt;= target) &#123;<br>                minv = <span class="hljs-built_in">min</span>(minv, right - left + <span class="hljs-number">1</span>);<br>                sum -= nums[left];<br>                left ++;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> minv == INT32_MAX ? <span class="hljs-number">0</span> : minv;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>不定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>不定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-2730.找到最长的半重复子字符串</title>
    <link href="/2025/04/09/LeetCode/Solution/LeetCode-2730/"/>
    <url>/2025/04/09/LeetCode/Solution/LeetCode-2730/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/find-the-longest-semi-repetitive-substring/description/">2730. 找到最长的半重复子字符串</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">longestSemiRepetitiveSubstring</span><span class="hljs-params">(string s)</span> </span>&#123;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> cnt = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> maxv = INT32_MIN;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">1</span>; right &lt; s.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            <span class="hljs-keyword">if</span> (s[right] == s[right - <span class="hljs-number">1</span>]) &#123;<br>                cnt ++;<br>            &#125;<br>            <span class="hljs-keyword">while</span> (cnt &gt; <span class="hljs-number">1</span>) &#123;<br>                <span class="hljs-keyword">if</span> (s[left] == s[left + <span class="hljs-number">1</span>]) &#123;<br>                    cnt --;<br>                &#125;<br>                left ++;<br>            &#125;<br>            maxv = <span class="hljs-built_in">max</span>(maxv, right - left + <span class="hljs-number">1</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> maxv == INT32_MIN ? <span class="hljs-number">1</span> : maxv;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>不定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>不定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-1658.将 x 减到 0 的最小操作数</title>
    <link href="/2025/04/09/LeetCode/Solution/LeetCode-1658/"/>
    <url>/2025/04/09/LeetCode/Solution/LeetCode-1658/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/minimum-operations-to-reduce-x-to-zero/description/">1658. 将 x 减到 0 的最小操作数</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">minOperations</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">int</span> x)</span> </span>&#123;<br>        <span class="hljs-type">int</span> allSum = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> n = nums.<span class="hljs-built_in">size</span>();<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i ++) &#123;<br>            allSum += nums[i];<br>        &#125;<br>        <span class="hljs-keyword">if</span> (allSum &lt; x) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>        &#125;<br>        <span class="hljs-comment">// 求最长的滑动窗口使得滑动窗口总值 == targetVal</span><br>        <span class="hljs-type">int</span> targetVal = allSum - x;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>, sum = <span class="hljs-number">0</span>, maxv = <span class="hljs-number">-1</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; n; right ++) &#123;<br>            sum += nums[right];<br>            <span class="hljs-keyword">while</span> (sum &gt; targetVal) &#123;<br>                sum -= nums[left];<br>                left ++;<br>            &#125;<br>            <span class="hljs-keyword">if</span> (sum == targetVal) &#123;<br>                maxv = <span class="hljs-built_in">max</span>(maxv, right - left + <span class="hljs-number">1</span>);<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> (maxv == <span class="hljs-number">-1</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> n - maxv;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>不定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>不定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-1004.最大连续1的个数 III</title>
    <link href="/2025/04/09/LeetCode/Solution/LeetCode-1004/"/>
    <url>/2025/04/09/LeetCode/Solution/LeetCode-1004/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/max-consecutive-ones-iii/description/">1004. 最大连续1的个数 III</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">longestOnes</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">int</span> k)</span> </span>&#123;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> maxv = INT32_MIN;<br>        <span class="hljs-type">int</span> cnt = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; nums.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            cnt += nums[right] == <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">while</span> (cnt &gt; k) &#123;<br>                cnt -= nums[left] == <span class="hljs-number">0</span>;<br>                left ++;<br>            &#125;<br>            maxv = <span class="hljs-built_in">max</span>(maxv, right - left + <span class="hljs-number">1</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> maxv;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>不定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>不定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-2024.考试的最大困扰度</title>
    <link href="/2025/04/09/LeetCode/Solution/LeetCode-2024/"/>
    <url>/2025/04/09/LeetCode/Solution/LeetCode-2024/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/maximize-the-confusion-of-an-exam/description/">2024. 考试的最大困扰度</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">maxConsecutiveAnswers</span><span class="hljs-params">(string answerKey, <span class="hljs-type">int</span> k)</span> </span>&#123;<br>        <span class="hljs-comment">// cnt[0]记录如果将T改为F时，&#x27;F&#x27;连续数目</span><br>        <span class="hljs-comment">// cnt[1]记录如果将F改为T时，&#x27;T&#x27;连续数目</span><br>        vector&lt;<span class="hljs-type">int</span>&gt;<span class="hljs-built_in">cnt</span>(<span class="hljs-number">2</span>);<br>        <span class="hljs-comment">// leftT代表将T改为F情况下的，left坐标</span><br>        <span class="hljs-type">int</span> leftT = <span class="hljs-number">0</span>, leftF = <span class="hljs-number">0</span>;<br>        <span class="hljs-comment">// maxvT代表将T改为F情况下,最大F连续数目</span><br>        <span class="hljs-type">int</span> maxvT = <span class="hljs-number">-1</span>, maxvF = <span class="hljs-number">-1</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; answerKey.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            cnt[<span class="hljs-number">0</span>] += answerKey[right] == <span class="hljs-string">&#x27;T&#x27;</span>;<br>            cnt[<span class="hljs-number">1</span>] += answerKey[right] == <span class="hljs-string">&#x27;F&#x27;</span>;<br>            <span class="hljs-keyword">while</span> (cnt[<span class="hljs-number">0</span>] &gt; k) &#123;<br>                cnt[<span class="hljs-number">0</span>] -= answerKey[leftT] == <span class="hljs-string">&#x27;T&#x27;</span>;<br>                leftT ++;<br>            &#125;<br>            maxvT = <span class="hljs-built_in">max</span>(maxvT, right - leftT + <span class="hljs-number">1</span>);<br>            <span class="hljs-keyword">while</span> (cnt[<span class="hljs-number">1</span>] &gt; k) &#123;<br>                cnt[<span class="hljs-number">1</span>] -= answerKey[leftF] == <span class="hljs-string">&#x27;F&#x27;</span>;<br>                leftF ++;<br>            &#125;<br>            maxvF = <span class="hljs-built_in">max</span>(maxvF, right - leftF + <span class="hljs-number">1</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">max</span>(maxvT, maxvF);<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>不定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>不定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-2958.最多 K 个重复元素的最长子数组</title>
    <link href="/2025/04/09/LeetCode/Solution/LeetCode-2958/"/>
    <url>/2025/04/09/LeetCode/Solution/LeetCode-2958/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/length-of-longest-subarray-with-at-most-k-frequency/description/">2958. 最多 K 个重复元素的最长子数组</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">maxSubarrayLength</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">int</span> k)</span> </span>&#123;<br>        unordered_map&lt;<span class="hljs-type">int</span>, <span class="hljs-type">int</span>&gt;map;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>, maxv = INT32_MIN;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; nums.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            map[nums[right]] ++;<br>            <span class="hljs-keyword">while</span> (map[nums[right]] &gt; k) &#123;<br>                map[nums[left]]--;<br>                left ++;<br>            &#125;<br>            maxv = <span class="hljs-built_in">max</span>(maxv, right - left + <span class="hljs-number">1</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> maxv;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>不定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>不定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-1695.删除子数组的最大得分</title>
    <link href="/2025/04/09/LeetCode/Solution/LeetCode-1695/"/>
    <url>/2025/04/09/LeetCode/Solution/LeetCode-1695/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/maximum-erasure-value/description/">1695. 删除子数组的最大得分</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">maximumUniqueSubarray</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums)</span> </span>&#123;<br>        unordered_map&lt;<span class="hljs-type">int</span>, <span class="hljs-type">int</span>&gt; map;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> maxv = INT32_MIN, sum = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; nums.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            map[nums[right]] ++;<br>            sum += nums[right];<br>            <span class="hljs-keyword">while</span> (map[nums[right]] &gt; <span class="hljs-number">1</span>) &#123;<br>                sum -= nums[left];<br>                map[nums[left]] --;<br>                <span class="hljs-keyword">if</span> (map[nums[left]] == <span class="hljs-number">0</span>) &#123;<br>                    map.<span class="hljs-built_in">erase</span>(nums[left]);<br>                &#125;<br>                left ++;<br>            &#125;<br>            maxv = <span class="hljs-built_in">max</span>(maxv, sum);<br>        &#125;<br>        <span class="hljs-keyword">return</span> maxv;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>不定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>不定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-904.水果成篮</title>
    <link href="/2025/04/09/LeetCode/Solution/LeetCode-904/"/>
    <url>/2025/04/09/LeetCode/Solution/LeetCode-904/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/fruit-into-baskets/description/">904. 水果成篮</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">totalFruit</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; fruits)</span> </span>&#123;<br>        unordered_map&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt;map;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>, maxv = INT32_MIN;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; fruits.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            map[fruits[right]] ++;<br>            <span class="hljs-keyword">while</span> (map.<span class="hljs-built_in">size</span>() &gt; <span class="hljs-number">2</span>) &#123;<br>                map[fruits[left]] --;<br>                <span class="hljs-keyword">if</span> (map[fruits[left]] == <span class="hljs-number">0</span>) &#123;<br>                    map.<span class="hljs-built_in">erase</span>(fruits[left]);<br>                &#125;<br>                left ++;<br>            &#125;<br>            maxv = <span class="hljs-built_in">max</span>(maxv, right - left + <span class="hljs-number">1</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> maxv;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>不定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>不定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-1208.尽可能使字符串相等</title>
    <link href="/2025/04/09/LeetCode/Solution/LeetCode-1208/"/>
    <url>/2025/04/09/LeetCode/Solution/LeetCode-1208/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/get-equal-substrings-within-budget/description/">1208. 尽可能使字符串相等</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">equalSubstring</span><span class="hljs-params">(string s, string t, <span class="hljs-type">int</span> maxCost)</span> </span>&#123;<br>        <span class="hljs-type">int</span> n = s.<span class="hljs-built_in">size</span>();<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> sum = <span class="hljs-number">0</span>, maxv = INT32_MIN;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; n; right ++) &#123;<br>            sum += <span class="hljs-built_in">abs</span>(s[right] - t[right]);<br>            <span class="hljs-keyword">while</span> (sum &gt; maxCost) &#123;<br>                sum -= <span class="hljs-built_in">abs</span>(s[left] - t[left]);<br>                left ++;<br>            &#125;<br>            maxv = <span class="hljs-built_in">max</span>(maxv, right - left + <span class="hljs-number">1</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> maxv;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>不定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>不定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-1493.删掉一个元素以后全为 1 的最长子数组</title>
    <link href="/2025/04/09/LeetCode/Solution/LeetCode-1493/"/>
    <url>/2025/04/09/LeetCode/Solution/LeetCode-1493/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/longest-subarray-of-1s-after-deleting-one-element/description/">1493. 删掉一个元素以后全为 1 的最长子数组</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">longestSubarray</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums)</span> </span>&#123;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> cnt = <span class="hljs-number">0</span>, maxv = INT32_MIN;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; nums.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            cnt += nums[right] == <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">while</span> (cnt &gt; <span class="hljs-number">1</span>) &#123;<br>                <span class="hljs-comment">// 判断是否存在一个最多有1个0的滑动窗口</span><br>                cnt -= nums[left] == <span class="hljs-number">0</span>;<br>                left ++;<br>            &#125;<br>            <span class="hljs-comment">// 滑动窗口总长度是 right-left+1,但是这里面最多有一个0,所以要减去1，维持只包含1的子数组</span><br>            maxv = <span class="hljs-built_in">max</span>(maxv, right - left);<br>        &#125;<br>        <span class="hljs-keyword">return</span> maxv;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>不定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>不定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-3090.每个字符最多出现两次的最长子字符串</title>
    <link href="/2025/04/09/LeetCode/Solution/LeetCode-3090/"/>
    <url>/2025/04/09/LeetCode/Solution/LeetCode-3090/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/maximum-length-substring-with-two-occurrences/description/">3090. 每个字符最多出现两次的最长子字符串</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">maximumLengthSubstring</span><span class="hljs-params">(string s)</span> </span>&#123;<br>        unordered_map&lt;<span class="hljs-type">int</span>, <span class="hljs-type">int</span>&gt;map;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>, maxv = INT32_MIN;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; s.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            map[s[right] - <span class="hljs-string">&#x27;a&#x27;</span>] ++;<br>            <span class="hljs-keyword">while</span> (map[s[right] - <span class="hljs-string">&#x27;a&#x27;</span>] &gt; <span class="hljs-number">2</span>) &#123;<br>                map[s[left] - <span class="hljs-string">&#x27;a&#x27;</span>]--;<br>                left ++;<br>            &#125;<br>            maxv = <span class="hljs-built_in">max</span>(maxv, right - left + <span class="hljs-number">1</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> maxv;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>不定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>不定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-3.无重复字符的最长子串</title>
    <link href="/2025/04/09/LeetCode/Solution/LeetCode-3/"/>
    <url>/2025/04/09/LeetCode/Solution/LeetCode-3/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/longest-substring-without-repeating-characters/description/">3. 无重复字符的最长子串</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">lengthOfLongestSubstring</span><span class="hljs-params">(string s)</span> </span>&#123;<br>        unordered_map&lt;<span class="hljs-type">int</span>, <span class="hljs-type">int</span>&gt;map;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> maxv = INT32_MIN;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; s.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            map[s[right] - <span class="hljs-string">&#x27;a&#x27;</span>] ++;<br>            <span class="hljs-keyword">while</span> (map[s[right] - <span class="hljs-string">&#x27;a&#x27;</span>] &gt; <span class="hljs-number">1</span>) &#123;<br>                map[s[left] - <span class="hljs-string">&#x27;a&#x27;</span>] --;<br>                left ++;<br>            &#125;<br>            maxv = <span class="hljs-built_in">max</span>(maxv, right - left + <span class="hljs-number">1</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> maxv == INT32_MIN ? <span class="hljs-number">0</span> : maxv;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>不定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>不定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-1052.爱生气的书店老板</title>
    <link href="/2025/04/08/LeetCode/Solution/LeetCode-1052/"/>
    <url>/2025/04/08/LeetCode/Solution/LeetCode-1052/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p><a href="https://leetcode.cn/problems/grumpy-bookstore-owner/">1052. 爱生气的书店老板</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">maxSatisfied</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; customers, vector&lt;<span class="hljs-type">int</span>&gt;&amp; grumpy, <span class="hljs-type">int</span> minutes)</span> </span>&#123;<br>        <span class="hljs-comment">// cnt[0] 记录不生气时的顾客数，cnt[1]记录生气时的顾客数</span><br>        vector&lt;<span class="hljs-type">int</span>&gt;<span class="hljs-built_in">cnt</span>(<span class="hljs-number">2</span>);<br>        <span class="hljs-type">int</span> n = customers.<span class="hljs-built_in">size</span>();<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>, maxv = INT32_MIN;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; n; right ++) &#123;<br>            cnt[grumpy[right]] += customers[right];<br>            <span class="hljs-keyword">if</span> (right - left + <span class="hljs-number">1</span> &gt;= minutes) &#123;<br>                maxv = <span class="hljs-built_in">max</span>(maxv, cnt[<span class="hljs-number">1</span>]);<br>                cnt[<span class="hljs-number">1</span>] -= grumpy[left] == <span class="hljs-number">1</span> ? customers[left] : <span class="hljs-number">0</span>;<br>                left ++;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> maxv + cnt[<span class="hljs-number">0</span>];<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-1423.可获得的最大点数</title>
    <link href="/2025/04/08/LeetCode/Solution/LeetCode-1423/"/>
    <url>/2025/04/08/LeetCode/Solution/LeetCode-1423/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题:</h2><p><a href="https://leetcode.cn/problems/maximum-points-you-can-obtain-from-cards/description/">1423. 可获得的最大点数</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">maxScore</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; cardPoints, <span class="hljs-type">int</span> k)</span> </span>&#123;<br>        <span class="hljs-type">int</span> allSum = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i : cardPoints) &#123;<br>            allSum += i;<br>        &#125;<br>        <span class="hljs-type">int</span> n = cardPoints.<span class="hljs-built_in">size</span>(), m = n - k;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>, sum = <span class="hljs-number">0</span>, minv = INT32_MAX;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; n; right ++) &#123;<br>            sum += cardPoints[right];<br>            <span class="hljs-keyword">if</span> (right - left + <span class="hljs-number">1</span> == m) &#123;<br>                minv = <span class="hljs-built_in">min</span>(minv, sum);<br>                sum -= cardPoints[left];<br>                left ++;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (minv == INT32_MAX) &#123;<br>            <span class="hljs-keyword">return</span> sum;<br>        &#125;<br>        <span class="hljs-keyword">return</span> allSum - minv;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>不定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>不定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-2461.长度为 K 子数组中的最大和</title>
    <link href="/2025/04/08/LeetCode/Solution/LeetCode-2461/"/>
    <url>/2025/04/08/LeetCode/Solution/LeetCode-2461/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题:</h2><p><a href="https://leetcode.cn/problems/maximum-sum-of-distinct-subarrays-with-length-k/description/">2461. 长度为 K 子数组中的最大和</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">long</span> <span class="hljs-type">long</span> <span class="hljs-title">maximumSubarraySum</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">int</span> k)</span> </span>&#123;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>;<br>        unordered_map&lt;<span class="hljs-type">int</span>, <span class="hljs-type">int</span>&gt;map;<br>        <span class="hljs-type">long</span> <span class="hljs-type">long</span> sum = <span class="hljs-number">0</span>, maxv = <span class="hljs-number">-1</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; nums.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            sum += nums[right];<br>            map[nums[right]] ++;<br>            <span class="hljs-keyword">if</span> (right - left + <span class="hljs-number">1</span> &gt;= k) &#123;<br>                <span class="hljs-keyword">if</span> (map.<span class="hljs-built_in">size</span>() == k) &#123;<br>                    <span class="hljs-keyword">if</span> (sum &gt; maxv) &#123;<br>                        maxv = sum;<br>                    &#125;<br>                &#125;<br>                sum -= nums[left];<br>                map[nums[left]] --;<br>                <span class="hljs-keyword">if</span> (map[nums[left]] == <span class="hljs-number">0</span>) &#123;<br>                    map.<span class="hljs-built_in">erase</span>(nums[left]);<br>                &#125;<br>                left ++;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> maxv == <span class="hljs-number">-1</span> ? <span class="hljs-number">0</span> : maxv;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-2841.几乎唯一子数组的最大和</title>
    <link href="/2025/04/08/LeetCode/Solution/LeetCode-2841/"/>
    <url>/2025/04/08/LeetCode/Solution/LeetCode-2841/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题:</h2><p><a href="https://leetcode.cn/problems/maximum-sum-of-almost-unique-subarray/description/">2841. 几乎唯一子数组的最大和</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">long</span> <span class="hljs-type">long</span> <span class="hljs-title">maxSum</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">int</span> m, <span class="hljs-type">int</span> k)</span> </span>&#123;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">long</span> <span class="hljs-type">long</span> sum = <span class="hljs-number">0</span>, maxv = <span class="hljs-number">-1</span>;<br>        unordered_map&lt;<span class="hljs-type">int</span>, <span class="hljs-type">int</span>&gt;map;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; nums.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            sum += nums[right];<br>            map[nums[right]] ++;<br>            <span class="hljs-keyword">if</span> (right - left + <span class="hljs-number">1</span> &gt;= k) &#123;<br>                <span class="hljs-keyword">if</span> (map.<span class="hljs-built_in">size</span>() &gt;= m) &#123;<br>                    <span class="hljs-keyword">if</span> (sum &gt; maxv) &#123;<br>                        maxv = sum;<br>                    &#125;<br>                &#125;<br>                sum -= nums[left];<br>                map[nums[left]] --;<br>                <span class="hljs-keyword">if</span> (map[nums[left]] == <span class="hljs-number">0</span>) &#123;<br>                    map.<span class="hljs-built_in">erase</span>(nums[left]);<br>                &#125;<br><br>                left ++;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> maxv == <span class="hljs-number">-1</span> ? <span class="hljs-number">0</span> : maxv;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-2379.得到 K 个黑块的最少涂色次数</title>
    <link href="/2025/04/08/LeetCode/Solution/LeetCode-2379/"/>
    <url>/2025/04/08/LeetCode/Solution/LeetCode-2379/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题:</h2><p><a href="https://leetcode.cn/problems/minimum-recolors-to-get-k-consecutive-black-blocks/description/">2379. 得到 K 个黑块的最少涂色次数</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">minimumRecolors</span><span class="hljs-params">(string blocks, <span class="hljs-type">int</span> k)</span> </span>&#123;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> sum = <span class="hljs-number">0</span>, minv = INT32_MAX;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; blocks.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            sum += blocks[right] == <span class="hljs-string">&#x27;W&#x27;</span>;<br>            <span class="hljs-keyword">if</span> (right - left + <span class="hljs-number">1</span> &gt;= k) &#123;<br>                minv = <span class="hljs-built_in">min</span>(sum, minv);<br>                sum -= blocks[left] == <span class="hljs-string">&#x27;W&#x27;</span>;<br>                left ++;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> minv;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-2090.半径为 k 的子数组平均值</title>
    <link href="/2025/04/08/LeetCode/Solution/LeetCode-2090/"/>
    <url>/2025/04/08/LeetCode/Solution/LeetCode-2090/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题:</h2><p><a href="https://leetcode.cn/problems/k-radius-subarray-averages/description/">2090. 半径为 k 的子数组平均值</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">getAverages</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">int</span> k)</span> </span>&#123;<br>        vector&lt;<span class="hljs-type">int</span>&gt;<span class="hljs-built_in">arr</span>(nums.<span class="hljs-built_in">size</span>(), <span class="hljs-number">-1</span>);<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">long</span> <span class="hljs-type">long</span> sum = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; nums.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            sum += nums[right];<br>            <span class="hljs-keyword">if</span> (right - left + <span class="hljs-number">1</span> &gt;= <span class="hljs-number">2</span> * k + <span class="hljs-number">1</span>) &#123;<br>                arr[(right + left) / <span class="hljs-number">2</span>] = sum / (<span class="hljs-number">2</span> * k + <span class="hljs-number">1</span>); <br>                sum -= nums[left];<br>                left ++;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> arr;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-1343.大小为 K 且平均值大于等于阈值的子数组数目</title>
    <link href="/2025/04/08/LeetCode/Solution/LeetCode-1343/"/>
    <url>/2025/04/08/LeetCode/Solution/LeetCode-1343/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题:</h2><p><a href="https://leetcode.cn/problems/number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold/description/">1343. 大小为 K 且平均值大于等于阈值的子数组数目</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">numOfSubarrays</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; arr, <span class="hljs-type">int</span> k, <span class="hljs-type">int</span> threshold)</span> </span>&#123;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">long</span> <span class="hljs-type">long</span> sum = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> cnt = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; arr.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            sum += arr[right];<br>            <span class="hljs-keyword">if</span> (right - left + <span class="hljs-number">1</span> &gt;= k) &#123;<br>                <span class="hljs-keyword">if</span> (threshold * k &lt;= sum) &#123;<br>                    cnt ++;<br>                &#125;<br>                sum -= arr[left];<br>                left ++;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> cnt;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-643.子数组最大平均数 I</title>
    <link href="/2025/04/08/LeetCode/Solution/LeetCode-643/"/>
    <url>/2025/04/08/LeetCode/Solution/LeetCode-643/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题:</h2><p><a href="https://leetcode.cn/problems/maximum-average-subarray-i/description/">643. 子数组最大平均数 I</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">double</span> <span class="hljs-title">findMaxAverage</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">int</span> k)</span> </span>&#123;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> sum = <span class="hljs-number">0</span>, maxv = INT32_MIN;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; nums.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            sum += nums[right];<br>            <span class="hljs-keyword">if</span> (right - left + <span class="hljs-number">1</span> &gt;= k) &#123;<br>                maxv = <span class="hljs-built_in">max</span>(maxv, sum);<br>                sum -= nums[left];<br>                left ++;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> (<span class="hljs-type">double</span>)maxv / k;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode-1456.定长字串中元音的最大数目</title>
    <link href="/2025/04/07/LeetCode/Solution/LeetCode-1456/"/>
    <url>/2025/04/07/LeetCode/Solution/LeetCode-1456/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题:</h2><p><a href="https://leetcode.cn/problems/maximum-number-of-vowels-in-a-substring-of-given-length/description/">1456. 定长子串中元音的最大数目</a></p><h2 id="1c代码"><a class="markdownIt-Anchor" href="#1c代码"></a> 1.C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">check</span><span class="hljs-params">(<span class="hljs-type">char</span> a)</span> </span>&#123;<br>        <span class="hljs-keyword">if</span> (a == <span class="hljs-string">&#x27;a&#x27;</span> || a == <span class="hljs-string">&#x27;e&#x27;</span> || a == <span class="hljs-string">&#x27;i&#x27;</span> || a == <span class="hljs-string">&#x27;o&#x27;</span> || a == <span class="hljs-string">&#x27;u&#x27;</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">maxVowels</span><span class="hljs-params">(string s, <span class="hljs-type">int</span> k)</span> </span>&#123;<br>        <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> cnt = <span class="hljs-number">0</span>, maxv = INT32_MIN;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> right = <span class="hljs-number">0</span>; right &lt; s.<span class="hljs-built_in">size</span>(); right ++) &#123;<br>            cnt += <span class="hljs-built_in">check</span>(s[right]);<br>            <span class="hljs-keyword">if</span> (right - left + <span class="hljs-number">1</span> == k) &#123;<br>                maxv = <span class="hljs-built_in">max</span>(maxv, cnt);<br>                cnt -= <span class="hljs-built_in">check</span>(s[left]);<br>                left ++;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> maxv;<br>    &#125;<br>&#125;;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>滑动窗口</category>
      
      <category>定长滑动窗口</category>
      
    </categories>
    
    
    <tags>
      
      <tag>滑动窗口</tag>
      
      <tag>定长滑动窗口</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>滑动窗口</title>
    <link href="/2025/03/06/LeetCode/QuestionList/%E7%81%B5%E8%8C%B6%E5%B1%B1%E8%89%BE%E5%BA%9C-%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/"/>
    <url>/2025/03/06/LeetCode/QuestionList/%E7%81%B5%E8%8C%B6%E5%B1%B1%E8%89%BE%E5%BA%9C-%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="1滑动窗口"><a class="markdownIt-Anchor" href="#1滑动窗口"></a> 1.滑动窗口</h1><h2 id="一-定长滑动窗口"><a class="markdownIt-Anchor" href="#一-定长滑动窗口"></a> 一、定长滑动窗口</h2><ul><li>1.1 基础</li></ul><a href="/2025/04/07/LeetCode/Solution/LeetCode-1456/" title="LeetCode-1456.定长字串中元音的最大数目">LeetCode-1456.定长字串中元音的最大数目</a><br><a href="/2025/04/08/LeetCode/Solution/LeetCode-643/" title="LeetCode-643.子数组最大平均数 I">LeetCode-643.子数组最大平均数 I</a><br><a href="/2025/04/08/LeetCode/Solution/LeetCode-1343/" title="LeetCode-1343.大小为 K 且平均值大于等于阈值的子数组数目">LeetCode-1343.大小为 K 且平均值大于等于阈值的子数组数目</a><br><a href="/2025/04/08/LeetCode/Solution/LeetCode-2090/" title="LeetCode-2090.半径为 k 的子数组平均值">LeetCode-2090.半径为 k 的子数组平均值</a><br><a href="/2025/04/08/LeetCode/Solution/LeetCode-2379/" title="LeetCode-2379.得到 K 个黑块的最少涂色次数">LeetCode-2379.得到 K 个黑块的最少涂色次数</a><br><a href="/2025/04/08/LeetCode/Solution/LeetCode-2841/" title="LeetCode-2841.几乎唯一子数组的最大和">LeetCode-2841.几乎唯一子数组的最大和</a><br><a href="/2025/04/08/LeetCode/Solution/LeetCode-2461/" title="LeetCode-2461.长度为 K 子数组中的最大和">LeetCode-2461.长度为 K 子数组中的最大和</a><br><a href="/2025/04/08/LeetCode/Solution/LeetCode-1423/" title="LeetCode-1423.可获得的最大点数">LeetCode-1423.可获得的最大点数</a><br><a href="/2025/04/08/LeetCode/Solution/LeetCode-1052/" title="LeetCode-1052.爱生气的书店老板">LeetCode-1052.爱生气的书店老板</a><br>待完成(LeetCode-1652)<br><ul><li>1.2进阶</li></ul><p>待完成(LeetCode-3439)<br />待完成(LeetCode-2134)<br />待完成(LeetCode-1297)<br />待完成(LeetCode-2653)<br />待完成(LeetCode-1888)<br />待完成(LeetCode-567)<br />待完成(LeetCode-438)<br />待完成(LeetCode-30)<br />待完成(LeetCode-2156)<br />待完成(LeetCode-2953)<br />待完成(LeetCode-1016)</p><ul><li>1.3其他<br />待完成(LeetCode-2269)<br />待完成(LeetCode-1984)<br />待完成(LeetCode-1461)<br />待完成(LeetCode-220)</li></ul><hr /><h2 id="二-不定长滑动窗口"><a class="markdownIt-Anchor" href="#二-不定长滑动窗口"></a> 二、不定长滑动窗口</h2><ul><li>2.1 求最长/最大<br />一般题目都有「至多」的要求。</li><li>2.1.1 基础</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>起步</title>
    <link href="/2025/03/06/post/"/>
    <url>/2025/03/06/post/</url>
    
    <content type="html"><![CDATA[<h1 id="起步"><a class="markdownIt-Anchor" href="#起步"></a> 起步</h1><p>根据 <a href="https://leetcode.cn/u/endlesscheng/">灵茶山艾府</a> 大佬总结的题单，自己写完相应题目后的题解</p><p>1.<a href="/2025/03/06/LeetCode/QuestionList/%E7%81%B5%E8%8C%B6%E5%B1%B1%E8%89%BE%E5%BA%9C-%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/" title="滑动窗口">滑动窗口</a></p>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>Leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/03/06/hello-world/"/>
    <url>/2025/03/06/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
